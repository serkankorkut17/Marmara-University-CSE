$date
	Wed Dec 28 00:24:31 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module TwentyBitAdder_tb $end
$var wire 20 ! Sum [19:0] $end
$var wire 1 " Cout $end
$var reg 20 # A [19:0] $end
$var reg 20 $ B [19:0] $end
$var reg 1 % Cin $end
$scope module uut $end
$var wire 20 & A [19:0] $end
$var wire 20 ' B [19:0] $end
$var wire 1 % Cin $end
$var wire 20 ( Sum [19:0] $end
$var wire 1 ) Cout3 $end
$var wire 1 * Cout2 $end
$var wire 1 + Cout1 $end
$var wire 1 , Cout0 $end
$var wire 1 " Cout $end
$scope module fa1 $end
$var wire 4 - A [3:0] $end
$var wire 4 . B [3:0] $end
$var wire 1 % Cin $end
$var wire 4 / Sum [3:0] $end
$var wire 1 0 Cout2 $end
$var wire 1 1 Cout1 $end
$var wire 1 2 Cout0 $end
$var wire 1 , Cout $end
$scope module fa1 $end
$var wire 1 3 A $end
$var wire 1 4 B $end
$var wire 1 % Cin $end
$var wire 1 2 Cout $end
$var wire 1 5 Sum $end
$var wire 1 6 and1 $end
$var wire 1 7 and2 $end
$var wire 1 8 xor1 $end
$upscope $end
$scope module fa2 $end
$var wire 1 9 A $end
$var wire 1 : B $end
$var wire 1 2 Cin $end
$var wire 1 1 Cout $end
$var wire 1 ; Sum $end
$var wire 1 < and1 $end
$var wire 1 = and2 $end
$var wire 1 > xor1 $end
$upscope $end
$scope module fa3 $end
$var wire 1 ? A $end
$var wire 1 @ B $end
$var wire 1 1 Cin $end
$var wire 1 0 Cout $end
$var wire 1 A Sum $end
$var wire 1 B and1 $end
$var wire 1 C and2 $end
$var wire 1 D xor1 $end
$upscope $end
$scope module fa4 $end
$var wire 1 E A $end
$var wire 1 F B $end
$var wire 1 0 Cin $end
$var wire 1 , Cout $end
$var wire 1 G Sum $end
$var wire 1 H and1 $end
$var wire 1 I and2 $end
$var wire 1 J xor1 $end
$upscope $end
$upscope $end
$scope module fa2 $end
$var wire 4 K A [3:0] $end
$var wire 4 L B [3:0] $end
$var wire 1 , Cin $end
$var wire 4 M Sum [3:0] $end
$var wire 1 N Cout2 $end
$var wire 1 O Cout1 $end
$var wire 1 P Cout0 $end
$var wire 1 + Cout $end
$scope module fa1 $end
$var wire 1 Q A $end
$var wire 1 R B $end
$var wire 1 , Cin $end
$var wire 1 P Cout $end
$var wire 1 S Sum $end
$var wire 1 T and1 $end
$var wire 1 U and2 $end
$var wire 1 V xor1 $end
$upscope $end
$scope module fa2 $end
$var wire 1 W A $end
$var wire 1 X B $end
$var wire 1 P Cin $end
$var wire 1 O Cout $end
$var wire 1 Y Sum $end
$var wire 1 Z and1 $end
$var wire 1 [ and2 $end
$var wire 1 \ xor1 $end
$upscope $end
$scope module fa3 $end
$var wire 1 ] A $end
$var wire 1 ^ B $end
$var wire 1 O Cin $end
$var wire 1 N Cout $end
$var wire 1 _ Sum $end
$var wire 1 ` and1 $end
$var wire 1 a and2 $end
$var wire 1 b xor1 $end
$upscope $end
$scope module fa4 $end
$var wire 1 c A $end
$var wire 1 d B $end
$var wire 1 N Cin $end
$var wire 1 + Cout $end
$var wire 1 e Sum $end
$var wire 1 f and1 $end
$var wire 1 g and2 $end
$var wire 1 h xor1 $end
$upscope $end
$upscope $end
$scope module fa3 $end
$var wire 4 i A [3:0] $end
$var wire 4 j B [3:0] $end
$var wire 1 + Cin $end
$var wire 4 k Sum [3:0] $end
$var wire 1 l Cout2 $end
$var wire 1 m Cout1 $end
$var wire 1 n Cout0 $end
$var wire 1 * Cout $end
$scope module fa1 $end
$var wire 1 o A $end
$var wire 1 p B $end
$var wire 1 + Cin $end
$var wire 1 n Cout $end
$var wire 1 q Sum $end
$var wire 1 r and1 $end
$var wire 1 s and2 $end
$var wire 1 t xor1 $end
$upscope $end
$scope module fa2 $end
$var wire 1 u A $end
$var wire 1 v B $end
$var wire 1 n Cin $end
$var wire 1 m Cout $end
$var wire 1 w Sum $end
$var wire 1 x and1 $end
$var wire 1 y and2 $end
$var wire 1 z xor1 $end
$upscope $end
$scope module fa3 $end
$var wire 1 { A $end
$var wire 1 | B $end
$var wire 1 m Cin $end
$var wire 1 l Cout $end
$var wire 1 } Sum $end
$var wire 1 ~ and1 $end
$var wire 1 !" and2 $end
$var wire 1 "" xor1 $end
$upscope $end
$scope module fa4 $end
$var wire 1 #" A $end
$var wire 1 $" B $end
$var wire 1 l Cin $end
$var wire 1 * Cout $end
$var wire 1 %" Sum $end
$var wire 1 &" and1 $end
$var wire 1 '" and2 $end
$var wire 1 (" xor1 $end
$upscope $end
$upscope $end
$scope module fa4 $end
$var wire 4 )" A [3:0] $end
$var wire 4 *" B [3:0] $end
$var wire 1 * Cin $end
$var wire 4 +" Sum [3:0] $end
$var wire 1 ," Cout2 $end
$var wire 1 -" Cout1 $end
$var wire 1 ." Cout0 $end
$var wire 1 ) Cout $end
$scope module fa1 $end
$var wire 1 /" A $end
$var wire 1 0" B $end
$var wire 1 * Cin $end
$var wire 1 ." Cout $end
$var wire 1 1" Sum $end
$var wire 1 2" and1 $end
$var wire 1 3" and2 $end
$var wire 1 4" xor1 $end
$upscope $end
$scope module fa2 $end
$var wire 1 5" A $end
$var wire 1 6" B $end
$var wire 1 ." Cin $end
$var wire 1 -" Cout $end
$var wire 1 7" Sum $end
$var wire 1 8" and1 $end
$var wire 1 9" and2 $end
$var wire 1 :" xor1 $end
$upscope $end
$scope module fa3 $end
$var wire 1 ;" A $end
$var wire 1 <" B $end
$var wire 1 -" Cin $end
$var wire 1 ," Cout $end
$var wire 1 =" Sum $end
$var wire 1 >" and1 $end
$var wire 1 ?" and2 $end
$var wire 1 @" xor1 $end
$upscope $end
$scope module fa4 $end
$var wire 1 A" A $end
$var wire 1 B" B $end
$var wire 1 ," Cin $end
$var wire 1 ) Cout $end
$var wire 1 C" Sum $end
$var wire 1 D" and1 $end
$var wire 1 E" and2 $end
$var wire 1 F" xor1 $end
$upscope $end
$upscope $end
$scope module fa5 $end
$var wire 4 G" A [3:0] $end
$var wire 4 H" B [3:0] $end
$var wire 1 ) Cin $end
$var wire 4 I" Sum [3:0] $end
$var wire 1 J" Cout2 $end
$var wire 1 K" Cout1 $end
$var wire 1 L" Cout0 $end
$var wire 1 " Cout $end
$scope module fa1 $end
$var wire 1 M" A $end
$var wire 1 N" B $end
$var wire 1 ) Cin $end
$var wire 1 L" Cout $end
$var wire 1 O" Sum $end
$var wire 1 P" and1 $end
$var wire 1 Q" and2 $end
$var wire 1 R" xor1 $end
$upscope $end
$scope module fa2 $end
$var wire 1 S" A $end
$var wire 1 T" B $end
$var wire 1 L" Cin $end
$var wire 1 K" Cout $end
$var wire 1 U" Sum $end
$var wire 1 V" and1 $end
$var wire 1 W" and2 $end
$var wire 1 X" xor1 $end
$upscope $end
$scope module fa3 $end
$var wire 1 Y" A $end
$var wire 1 Z" B $end
$var wire 1 K" Cin $end
$var wire 1 J" Cout $end
$var wire 1 [" Sum $end
$var wire 1 \" and1 $end
$var wire 1 ]" and2 $end
$var wire 1 ^" xor1 $end
$upscope $end
$scope module fa4 $end
$var wire 1 _" A $end
$var wire 1 `" B $end
$var wire 1 J" Cin $end
$var wire 1 " Cout $end
$var wire 1 a" Sum $end
$var wire 1 b" and1 $end
$var wire 1 c" and2 $end
$var wire 1 d" xor1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
b0 I"
b0 H"
b0 G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
b0 +"
b0 *"
b0 )"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
b0 k
b0 j
b0 i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
b0 M
b0 L
b0 K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
18
07
06
15
04
13
02
01
00
b1 /
b0 .
b1 -
0,
0+
0*
0)
b1 (
b0 '
b1 &
0%
b0 $
b1 #
0"
b1 !
$end
#20
1}
1%"
11"
17"
1="
b1111 +"
1C"
1O"
1U"
1["
b1111 I"
1a"
1;
1A
b1111 /
1G
1S
1Y
1_
b1111 M
1e
1q
b11111111111111111111 !
b11111111111111111111 (
b1111 k
1w
1""
1("
14"
1:"
1@"
1F"
1R"
1X"
1^"
1d"
1>
1D
1J
1V
1\
1b
1h
1t
1z
1|
1$"
10"
16"
1<"
1B"
1N"
1T"
1Z"
1`"
19
1?
1E
1Q
1W
1]
1c
1o
1u
b1100 j
b1111 *"
b1111 H"
b1111 -
b1111 K
b11 i
b11111111110000000000 $
b11111111110000000000 '
b1111111111 #
b1111111111 &
#40
0a"
1"
0["
1b"
1J"
0U"
1\"
1K"
b0 I"
0O"
1V"
1L"
0C"
1P"
1)
0="
1D"
1,"
07"
1>"
1-"
b0 +"
01"
18"
1."
0%"
12"
1*
0}
1&"
1l
0w
1~
1m
b0 k
0q
1x
1n
0e
1r
1+
0_
1f
1N
0Y
1`
1O
b0 M
0S
1Z
1P
0G
1T
1,
0A
1H
10
05
b0 !
b0 (
b0 /
0;
1B
11
08
1<
12
17
14
0|
0$"
00"
06"
0<"
0B"
0N"
0T"
0Z"
0`"
1{
1#"
1/"
15"
1;"
1A"
1M"
1S"
1Y"
1_"
b1 .
b0 j
b0 *"
b0 H"
b1111 i
b1111 )"
b1111 G"
b1 $
b1 '
b11111111111111111111 #
b11111111111111111111 &
#60
1;
1A
b1110 /
1G
1S
1Y
1_
b1111 M
1e
1q
1w
1}
b111 k
0%"
01"
07"
0="
b0 +"
0C"
0O"
0U"
0["
b11111111110 !
b11111111110 (
b0 I"
0a"
0<
0B
0H
0T
0Z
0`
0f
0r
0x
0l
0*
0."
0-"
0,"
0)
0L"
0K"
0J"
0"
0>
0D
0J
0V
0\
0b
0h
0t
0z
0~
0&"
02"
08"
0>"
0D"
0P"
0V"
0\"
0b"
0""
0("
04"
0:"
0@"
0F"
0R"
0X"
0^"
0d"
1=
1C
1I
1U
1[
1a
1g
1s
1y
1:
1@
1F
1R
1X
1^
1d
1p
1v
0{
0#"
0/"
05"
0;"
0A"
0M"
0S"
0Y"
0_"
b1111 .
b1111 L
b11 j
b11 i
b0 )"
b0 G"
b1111111111 $
b1111111111 '
b1111111111 #
b1111111111 &
#80
1"
1b"
1J"
1\"
1K"
1V"
1L"
1P"
1)
1D"
1,"
1>"
1-"
18"
1."
12"
1*
0}
1&"
1l
0w
1~
0q
1x
0e
1r
0_
1f
0Y
1`
b0 M
0S
1Z
0G
1T
0A
1H
0;
1B
1<
16
b0 k
0%"
01"
07"
0="
b0 +"
0C"
0O"
0U"
0["
b0 I"
0a"
18
1>
1D
1J
1V
1\
1b
1h
1t
1z
12
11
10
1,
1P
1O
1N
1+
1n
1m
1""
1("
14"
1:"
1@"
1F"
1R"
1X"
1^"
1d"
07
0=
0C
0I
0U
0[
0a
0g
0s
0y
04
0:
0@
0F
0R
0X
0^
0d
0p
0v
1{
1#"
1/"
15"
1;"
1A"
1M"
1S"
1Y"
1_"
b0 !
b0 (
b0 /
05
b0 .
b0 L
b0 j
b1111 i
b1111 )"
b1111 G"
b0 $
b0 '
b11111111111111111111 #
b11111111111111111111 &
1%
#100
